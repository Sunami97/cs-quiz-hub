{
    "Type": "빈칸 채우기",
    "Item": [
        {
            "question": "리액트는 ___ 라이브러리로, 사용자 인터페이스를 구축하는 데 주로 사용됩니다.",
            "answer": [
                "UI",
                "User Interface",
                "사용자 인터페이스"
            ],
            "commentary": "리액트는 UI 라이브러리로, 다양한 컴포넌트를 통해 동적인 사용자 인터페이스를 구축할 수 있습니다."
        },
        {
            "question": "서버사이드 렌더링(SSR)은 페이지를 서버에서 렌더링하고 그 결과를 클라이언트에 ___ 형태로 전달하는 방식입니다.",
            "answer": [
                "HTML",
                "문서",
                "Document"
            ],
            "commentary": "SSR 방식은 초기 로딩 속도를 개선하고 SEO에 유리한 장점을 가집니다."
        },
        {
            "question": "클라이언트사이드 렌더링(CSR)은 모든 JavaScript 파일을 먼저 다운로드한 후, 브라우저에서 ___ 렌더링을 처리합니다.",
            "answer": [
                "UI",
                "사용자 인터페이스",
                "User Interface"
            ],
            "commentary": "CSR 방식은 초기 로딩 시간이 길지만, 이후의 상호작용은 빠르게 처리되는 장점이 있습니다."
        },
        {
            "question": "리액트는 서버사이드 렌더링(SSR)과 클라이언트사이드 렌더링(CSR)을 모두 지원하며, SSR을 통해 SEO를 개선할 수 있지만, CSR에서는 자바스크립트가 모두 로드되어야 ___가 완전히 표시됩니다.",
            "answer": [
                "페이지",
                "화면",
                "page",
                "screen"
            ],
            "commentary": "SSR은 초기 로딩 속도와 SEO에 유리하며, CSR은 이후 상호작용에서 더 빠릅니다."
        },
        {
            "question": "CSR에서는 자바스크립트를 사용해 클라이언트에서 모든 렌더링을 처리하며, 이 방식은 초기 로딩 속도가 느릴 수 있지만 이후 ___이/가 빠릅니다.",
            "answer": [
                "상호작용",
                "인터랙션",
                "interaction"
            ],
            "commentary": "CSR은 상호작용이 빈번한 애플리케이션에서 유용하게 사용됩니다."
        }
    ]
}